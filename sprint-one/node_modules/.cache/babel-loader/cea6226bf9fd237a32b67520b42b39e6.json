{"ast":null,"code":"var _jsxFileName = \"/home/robertoman/Desktop/coding-bootcamp/BrainStation/roberto-manzano-brainflix/sprint-one/src/components/CurrentVideo/CurrentVideo.jsx\";\nimport './CurrentVideo.scss';\nimport { Component } from 'react';\nimport Video from '../Video/Video';\nimport VideoInfo from '../VideoInfo/VideoInfo';\nimport Form from '../Form/Form';\nimport Comments from '../Comments/Comments';\nimport NextVideo from '../NextVideo/NextVideo';\nimport VideoDetails from '../../data/video-details.json';\nimport VideoList from '../../data/videos.json';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CurrentVideo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: VideoDetails[0],\n      // defaultVideo: 0,\n      sideVideos: VideoList\n    };\n\n    this.handleNextVideo = () => {\n      // console.log(this.state.videos);\n      let i = 1;\n      this.setState({\n        videos: VideoDetails[i++]\n      });\n    };\n  }\n\n  // handleNextVideo = (event) => {\n  //   console.log(event.target);\n  //   this.setState({\n  //     defaultVideo: this.state.defaultVideo + 1,\n  //   });\n  // };\n  // updateSelectedVideo = () => {\n  //   let selectedVideo = this.state.videos.find((video) => video.id === id);\n  //   this.setState({\n  //     selectedVideo: selectedVideo,\n  //   });\n  // };\n  render() {\n    let id;\n    const {\n      videos,\n      defaultVideo,\n      sideVideos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"currentVideo\",\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        image: videos.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoInfo, {\n        title: videos.title,\n        channel: videos.channel,\n        timestamp: videos.timestamp,\n        views: videos.views,\n        likes: videos.likes,\n        description: videos.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), videos.comments.map((comment, index) => {\n        comment.image = 'https://loremflickr.com/48/48';\n        comment.date = moment.unix(comment.timestamp / 1000).fromNow();\n        return /*#__PURE__*/_jsxDEV(Comments, {\n          image: comment.image,\n          name: comment.name,\n          date: comment.date,\n          comment: comment.comment\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Next Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), sideVideos.map((video, index) => {\n          let id = video.id;\n          return /*#__PURE__*/_jsxDEV(NextVideo, {\n            handleNextVideo: this.handleNextVideo,\n            id: video.id,\n            image: video.image,\n            title: video.title,\n            channel: video.channel\n          }, video.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/robertoman/Desktop/coding-bootcamp/BrainStation/roberto-manzano-brainflix/sprint-one/src/components/CurrentVideo/CurrentVideo.jsx"],"names":["Component","Video","VideoInfo","Form","Comments","NextVideo","VideoDetails","VideoList","moment","CurrentVideo","state","videos","sideVideos","handleNextVideo","i","setState","render","id","defaultVideo","image","title","channel","timestamp","views","likes","description","comments","map","comment","index","date","unix","fromNow","name","video"],"mappings":";AAAA,OAAO,qBAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDU,KADkD,GAC1C;AACNC,MAAAA,MAAM,EAAEL,YAAY,CAAC,CAAD,CADd;AAEN;AACAM,MAAAA,UAAU,EAAEL;AAHN,KAD0C;;AAAA,SAOlDM,eAPkD,GAOhC,MAAM;AACtB;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,WAAKC,QAAL,CAAc;AACZJ,QAAAA,MAAM,EAAEL,YAAY,CAACQ,CAAC,EAAF;AADR,OAAd;AAGD,KAbiD;AAAA;;AAelD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAE,EAAAA,MAAM,GAAG;AACP,QAAIC,EAAJ;AACA,UAAM;AAAEN,MAAAA,MAAF;AAAUO,MAAAA,YAAV;AAAwBN,MAAAA;AAAxB,QAAuC,KAAKF,KAAlD;AACA,wBACE;AAAS,MAAA,SAAS,EAAC,cAAnB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEC,MAAM,CAACQ;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,KAAK,EAAER,MAAM,CAACS,KADhB;AAEE,QAAA,OAAO,EAAET,MAAM,CAACU,OAFlB;AAGE,QAAA,SAAS,EAAEV,MAAM,CAACW,SAHpB;AAIE,QAAA,KAAK,EAAEX,MAAM,CAACY,KAJhB;AAKE,QAAA,KAAK,EAAEZ,MAAM,CAACa,KALhB;AAME,QAAA,WAAW,EAAEb,MAAM,CAACc;AANtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAVF,EAWGd,MAAM,CAACe,QAAP,CAAgBC,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvCD,QAAAA,OAAO,CAACT,KAAR,GAAgB,+BAAhB;AACAS,QAAAA,OAAO,CAACE,IAAR,GAAetB,MAAM,CAACuB,IAAP,CAAYH,OAAO,CAACN,SAAR,GAAoB,IAAhC,EAAsCU,OAAtC,EAAf;AACA,4BAAO,QAAC,QAAD;AAAsB,UAAA,KAAK,EAAEJ,OAAO,CAACT,KAArC;AAA4C,UAAA,IAAI,EAAES,OAAO,CAACK,IAA1D;AAAgE,UAAA,IAAI,EAAEL,OAAO,CAACE,IAA9E;AAAoF,UAAA,OAAO,EAAEF,OAAO,CAACA;AAArG,WAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAJA,CAXH,eAgBE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGjB,UAAU,CAACe,GAAX,CAAe,CAACO,KAAD,EAAQL,KAAR,KAAkB;AAChC,cAAIZ,EAAE,GAAGiB,KAAK,CAACjB,EAAf;AACA,8BACE,QAAC,SAAD;AACE,YAAA,eAAe,EAAE,KAAKJ,eADxB;AAGE,YAAA,EAAE,EAAEqB,KAAK,CAACjB,EAHZ;AAIE,YAAA,KAAK,EAAEiB,KAAK,CAACf,KAJf;AAKE,YAAA,KAAK,EAAEe,KAAK,CAACd,KALf;AAME,YAAA,OAAO,EAAEc,KAAK,CAACb;AANjB,aAEOa,KAAK,CAACjB,EAFb;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAZA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmCD;;AAnEiD","sourcesContent":["import './CurrentVideo.scss';\nimport { Component } from 'react';\nimport Video from '../Video/Video';\nimport VideoInfo from '../VideoInfo/VideoInfo';\nimport Form from '../Form/Form';\nimport Comments from '../Comments/Comments';\nimport NextVideo from '../NextVideo/NextVideo';\nimport VideoDetails from '../../data/video-details.json';\nimport VideoList from '../../data/videos.json';\nimport moment from 'moment';\n\nexport default class CurrentVideo extends Component {\n  state = {\n    videos: VideoDetails[0],\n    // defaultVideo: 0,\n    sideVideos: VideoList,\n  };\n\n  handleNextVideo = () => {\n    // console.log(this.state.videos);\n    let i = 1;\n    this.setState({\n      videos: VideoDetails[i++],\n    });\n  };\n\n  // handleNextVideo = (event) => {\n  //   console.log(event.target);\n  //   this.setState({\n  //     defaultVideo: this.state.defaultVideo + 1,\n  //   });\n  // };\n\n  // updateSelectedVideo = () => {\n  //   let selectedVideo = this.state.videos.find((video) => video.id === id);\n  //   this.setState({\n  //     selectedVideo: selectedVideo,\n  //   });\n  // };\n\n  render() {\n    let id;\n    const { videos, defaultVideo, sideVideos } = this.state;\n    return (\n      <section className=\"currentVideo\">\n        <Video image={videos.image} />\n        <VideoInfo\n          title={videos.title}\n          channel={videos.channel}\n          timestamp={videos.timestamp}\n          views={videos.views}\n          likes={videos.likes}\n          description={videos.description}\n        />\n        <Form />\n        {videos.comments.map((comment, index) => {\n          comment.image = 'https://loremflickr.com/48/48';\n          comment.date = moment.unix(comment.timestamp / 1000).fromNow();\n          return <Comments key={index} image={comment.image} name={comment.name} date={comment.date} comment={comment.comment} />;\n        })}\n        <section>\n          <h3>Next Video</h3>\n          {sideVideos.map((video, index) => {\n            let id = video.id;\n            return (\n              <NextVideo\n                handleNextVideo={this.handleNextVideo}\n                key={video.id}\n                id={video.id}\n                image={video.image}\n                title={video.title}\n                channel={video.channel}\n              />\n            );\n          })}\n        </section>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}