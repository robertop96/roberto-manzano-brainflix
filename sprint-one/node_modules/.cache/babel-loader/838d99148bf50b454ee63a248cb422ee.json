{"ast":null,"code":"var _jsxFileName = \"/home/robertoman/Desktop/BrainStation/roberto-manzano-brainflix/sprint-one/src/components/Body/Body.jsx\";\nimport './Body.scss';\nimport { Component } from 'react';\nimport Video from '../Video/Video';\nimport VideoInfo from '../VideoInfo/VideoInfo';\nimport Form from '../Form/Form';\nimport Comments from '../Comments/Comments';\nimport NextVideo from '../NextVideo/NextVideo';\nimport VideoDetails from '../../data/video-details.json';\nimport VideoList from '../../data/videos.json';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Body extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: VideoDetails[0],\n      sideVideos: VideoList\n    };\n\n    this.handleNextVideo = event => {\n      let id = event.target.id;\n      let selectedVideo = VideoDetails.find(video => video.id === id);\n      let newSideVideo = VideoList.filter(video => !(video.id === id));\n      this.setState({\n        videos: selectedVideo,\n        sideVideos: newSideVideo\n      });\n    };\n  }\n\n  render() {\n    const {\n      videos,\n      sideVideos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"currentVideo\",\n        children: [/*#__PURE__*/_jsxDEV(Video, {\n          image: videos.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VideoInfo, {\n          title: videos.title,\n          channel: videos.channel,\n          timestamp: videos.timestamp,\n          views: videos.views,\n          likes: videos.likes,\n          description: videos.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          comments: videos.comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), videos.comments.map((comment, index) => {\n          comment.image = 'https://loremflickr.com/48/48';\n          comment.date = moment.unix(comment.timestamp / 1000).fromNow();\n          return /*#__PURE__*/_jsxDEV(Comments, {\n            image: comment.image,\n            name: comment.name,\n            date: comment.date,\n            comment: comment.comment\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"nextVideo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"nextVideo__title\",\n          children: \"Next Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), sideVideos.map((video, index) => {\n          return /*#__PURE__*/_jsxDEV(NextVideo, {\n            handleNextVideo: this.handleNextVideo,\n            id: video.id,\n            image: video.image,\n            title: video.title,\n            channel: video.channel\n          }, video.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/robertoman/Desktop/BrainStation/roberto-manzano-brainflix/sprint-one/src/components/Body/Body.jsx"],"names":["Component","Video","VideoInfo","Form","Comments","NextVideo","VideoDetails","VideoList","moment","Body","state","videos","sideVideos","handleNextVideo","event","id","target","selectedVideo","find","video","newSideVideo","filter","setState","render","image","title","channel","timestamp","views","likes","description","comments","map","comment","index","date","unix","fromNow","name"],"mappings":"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","sourcesContent":["import './Body.scss';\nimport { Component } from 'react';\nimport Video from '../Video/Video';\nimport VideoInfo from '../VideoInfo/VideoInfo';\nimport Form from '../Form/Form';\nimport Comments from '../Comments/Comments';\nimport NextVideo from '../NextVideo/NextVideo';\nimport VideoDetails from '../../data/video-details.json';\nimport VideoList from '../../data/videos.json';\nimport moment from 'moment';\n\nexport default class Body extends Component {\n  state = {\n    videos: VideoDetails[0],\n    sideVideos: VideoList,\n  };\n\n  handleNextVideo = (event) => {\n    let id = event.target.id;\n    let selectedVideo = VideoDetails.find((video) => video.id === id);\n    let newSideVideo = VideoList.filter((video) => !(video.id === id));\n    this.setState({\n      videos: selectedVideo,\n      sideVideos: newSideVideo,\n    });\n  };\n\n  render() {\n    const { videos, sideVideos } = this.state;\n    return (\n      <section>\n        <section className=\"currentVideo\">\n          <Video image={videos.image} />\n          <VideoInfo\n            title={videos.title}\n            channel={videos.channel}\n            timestamp={videos.timestamp}\n            views={videos.views}\n            likes={videos.likes}\n            description={videos.description}\n          />\n          <Form comments={videos.comments} />\n          {videos.comments.map((comment, index) => {\n            comment.image = 'https://loremflickr.com/48/48';\n            comment.date = moment.unix(comment.timestamp / 1000).fromNow();\n            return <Comments key={index} image={comment.image} name={comment.name} date={comment.date} comment={comment.comment} />;\n          })}\n        </section>\n        <section className=\"nextVideo\">\n          <h3 className=\"nextVideo__title\">Next Video</h3>\n          {sideVideos.map((video, index) => {\n            return (\n              <NextVideo\n                handleNextVideo={this.handleNextVideo}\n                key={video.id}\n                id={video.id}\n                image={video.image}\n                title={video.title}\n                channel={video.channel}\n              />\n            );\n          })}\n        </section>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}